@using BlazorContextMenu.Services
@inject ISampleDataService sampleDataService
@inject IBlazorContextMenuService blazorContextMenuService

<h1 id="header">Hello, Blazor context menu !</h1>

<label>Menu 2 animation: </label>
<select @bind="Animation">
    <option value="@Animation.None">@Animation.None</option>
    <option value="@Animation.FadeIn">@Animation.FadeIn</option>
    <option value="@Animation.Grow">@Animation.Grow</option>
    <option value="@Animation.Slide">@Animation.Slide</option>
    <option value="@Animation.Zoom">@Animation.Zoom</option>
</select>


<ContextMenuTrigger MenuId="menu1">
    <p id="test1-trigger">Right-click me (menu1)</p>
</ContextMenuTrigger>

<textarea style="@($"display:{TextAreaDisplay};")" id="test1-textarea" rows="20" cols="50" readonly wrap="hard" @bind="Summaries"></textarea>



<ContextMenuTrigger MenuId="menu2">
    <p id="test2-trigger">Right-click me (menu2 - with icons and sub-menus)</p>
</ContextMenuTrigger>


<ContextMenuTrigger MenuId="menu1" MouseButtonTrigger="MouseButtonTrigger.Left">
    <p id="test3-trigger">Left-click me (menu1)</p>
</ContextMenuTrigger>

<ContextMenuTrigger MenuId="menu1" MouseButtonTrigger="MouseButtonTrigger.Both">
    <p id="test4-trigger">Click me with left or right mouse button (menu1)</p>
</ContextMenuTrigger>

<ContextMenuTrigger MenuId="menu2" MouseButtonTrigger="MouseButtonTrigger.Left">
    <p id="test5-trigger">Left-click me (menu2 - with icons and sub-menus)</p>
</ContextMenuTrigger>

<ContextMenuTrigger MenuId="menu2" MouseButtonTrigger="MouseButtonTrigger.Both">
    <p id="test6-trigger">Right or left-click me (menu2 - with icons and sub-menus)</p>
</ContextMenuTrigger>

<ContextMenuTrigger MenuId="menu1" WrapperTag="span">
    <p id="test7-trigger">(span trigger) Right-click me (menu1)</p>
</ContextMenuTrigger>

<ContextMenuTrigger MenuId="menu1" Id="test8-trigger" WrapperTag="textarea">
    (textarea trigger) Right-click me (menu1)
</ContextMenuTrigger>

<ContextMenuTrigger Id="test9-trigger" MenuId="menu1" WrapperTag="pre">
    (pre) Right-click me (menu1). Menu show is prevented!
    this is a preformated text
</ContextMenuTrigger>

<ContextMenuTrigger MenuId="menu1" MouseButtonTrigger="MouseButtonTrigger.DoubleClick">
    <p id="test10-trigger">Double click me (menu1)</p>
</ContextMenuTrigger>

<ContextMenuTrigger MenuId="menu2" MouseButtonTrigger="MouseButtonTrigger.DoubleClick">
    <p id="test11-trigger">Double click me (menu2 - with icons and sub-menus)</p>
</ContextMenuTrigger>

<ContextMenuTrigger MenuId="menu4">
    <p id="test12-trigger">Right-Click me (menu4 unhideable)</p>
</ContextMenuTrigger>

<ContextMenuTrigger MenuId="menu5">
    <p id="test13-trigger">Right-Click me (menu5 hides on mouseup)</p>
</ContextMenuTrigger>

<ContextMenuTrigger MenuId="menu6">
    <p id="test14-trigger">Right-Click me (menu6 - items contain nested components)</p>
</ContextMenuTrigger>

<ContextMenuTrigger MenuId="menu1" MouseButtonTrigger="MouseButtonTrigger.Left">
    <p id="test15-trigger">Left-click me (menu1)</p>
    <p id="ignoreThis">Ignore this</p>
</ContextMenuTrigger>

<ContextMenuTrigger MenuId="menu7" MouseButtonTrigger="MouseButtonTrigger.Left">
    <p id="menu7-test1-trigger">Left-click me (menu7)</p>
</ContextMenuTrigger>


<ContextMenu Id="menu1" Template="dark" OnAppearing="OnAppearingMenu1">
    <Item Id="menu1-item1" OnClick="FetchDataClick">Fetch Data</Item>
    <Item Id="menu1-item2" OnClick="ClearDataClick">Clear Data</Item>
    <Separator />
    <Item Id="menu1-item3" Enabled="false">Disabled Item </Item>
</ContextMenu>

<ContextMenu Id="menu2" Template="red" Animation="Animation">
    <Item Id="menu2-item1" OnClick="OnClick"> <i class="far fa-file"></i> New</Item>
    <Item OnClick="OnClick"><i class="fas fa-edit"></i> Edit</Item>
    <Item OnClick="OnClick" Enabled="false"> <i class="fas fa-trash-alt"></i> Delete</Item>
    <Separator />
    <Item Id="submenu1-trigger">
        <i class="fas fa-cogs"></i> More
        <SubMenu Id="submenu1" Template="dark">
            <Item OnClick="OnClick"> <i class="far fa-save"></i> Save As</Item>
            <Item OnClick="OnClick"> <i class="far fa-save"></i> Save</Item>
            <Item Id="submenu2-trigger">
                <i class="fas fa-save"></i> Export as
                <SubMenu Id="submenu2">
                    <Item OnClick="OnClick"> <i class="fas fa-file-pdf"></i> Pdf</Item>
                    <Item OnClick="OnClick"> <i class="far fa-file-alt"></i> Text</Item>
                </SubMenu>
            </Item>
        </SubMenu>
    </Item>
    <Item Enabled="false">
        <i class="fas fa-cogs"></i> Disabled Submenu
        <SubMenu>
            <Item OnClick="OnClick">Item 1</Item>
            <Item OnClick="OnClick">Item 2</Item>
        </SubMenu>
    </Item>
</ContextMenu>

<ContextMenu Id="menu3" AutoHide="false">
    <Item Id="menu3-item1" OnClick="OnClick">Item 1</Item>
    <Item Id="menu3-item2" OnClick="OnClick">Item 2</Item>
</ContextMenu>

<ContextMenu Id="menu4" OnHiding="OnHiding">
    <Item Id="menu4-item1" OnClick="OnClick">Item 1</Item>
    <Item Id="menu4-item2" OnClick="OnClick">Item 2</Item>
</ContextMenu>

<ContextMenu Id="menu5" AutoHideEvent="AutoHideEvent.MouseUp" >
    <Item Id="menu5-item1" OnClick="OnClick">Item 1</Item>
    <Item Id="menu5-item2" OnClick="OnClick">Item 2</Item>
</ContextMenu>

<ContextMenu Id="menu6" >
    <Item Id="menu6-item1" OnClick="OnClick"><ItemChild>Item 1</ItemChild></Item>
    <Item Id="menu6-item2" OnClick="OnClick"><ItemChild>Item 2</ItemChild></Item>
</ContextMenu>

<ContextMenu Id="menu7" AutoHide="false"> 
    <Item Id="menu7-item1">Item 1</Item>
    <Item Id="menu7-item2">Item 2</Item>
</ContextMenu>

<div>
    <button id="showMenuBtn" @onclick="ShowMenuBtnOnClick">Show menu1 in 300x300 using handler</button>
    <button id="showNoAutoCloseBtn" @onclick="ShowNoAutoCloseBtnOnClick">Show menu1 in 300x300 using handler</button>
    <button id="showAndHideMenuBtn" @onclick="ShowAndHideMenuBtnClick">Show menu1 in 300x300 using handler and hide after 2 seconds</button>
</div>

<div>
    <button id="determineIfMenu7IsShownbtn" @onclick="DetermineIfMenu7IsShown">Determine if menu7 is shown</button>
    <p id="menu7-isShownResult">@IsMenu7Shown</p>
</div>

<hr />

<ContextMenuTrigger MenuId="menu2">
    <div>
        <p id="test-propagation-right">Test Nested Menu. Here is menu2 (Right-click)</p>
        <ContextMenuTrigger MenuId="menu1">
            <p id="test-propagation-right-child">In here is menu1</p>
        </ContextMenuTrigger>
    </div>
</ContextMenuTrigger>

<ContextMenuTrigger MenuId="menu2" MouseButtonTrigger="MouseButtonTrigger.Left">
    <div>
        <p id="test-propagation-left">Test Nested Menu. Here is menu2 (Left-click)</p>
        <ContextMenuTrigger MenuId="menu1" MouseButtonTrigger="MouseButtonTrigger.Left">
            <p id="test-propagation-left-child">In here is menu1</p>
        </ContextMenuTrigger>
    </div>
</ContextMenuTrigger>

<ContextMenuTrigger MenuId="menu2" MouseButtonTrigger="MouseButtonTrigger.DoubleClick">
    <div>
        <p id="test-propagation-double">Test Nested Menu. Here is menu2 (Double-click)</p>
        <ContextMenuTrigger MenuId="menu1" MouseButtonTrigger="MouseButtonTrigger.DoubleClick">
            <p id="test-propagation-double-child">In here is menu1</p>
        </ContextMenuTrigger>
    </div>
</ContextMenuTrigger>

<NavLink href="/TodoList">Go to Todo List</NavLink>
<div id="app_loaded"></div>

@code{
    private bool menu1Autoclose = true;

    protected async Task ShowMenuBtnOnClick()
    {
        await blazorContextMenuService.ShowMenu("menu1", 300, 300);
    }

    protected async Task ShowNoAutoCloseBtnOnClick()
    {
        await blazorContextMenuService.ShowMenu("menu3", 300, 300);
    }

    protected async Task ShowAndHideMenuBtnClick()
    {
        await blazorContextMenuService.ShowMenu("menu3", 300, 300);
        await Task.Delay(2000);
        await blazorContextMenuService.HideMenu("menu3");
    }

    protected string TextAreaDisplay { get; set; } = "none";

    protected string Summaries { get; set; }

    protected Animation Animation { get; set; }

    protected string IsMenu7Shown { get; set; } = bool.FalseString;

    protected async Task DetermineIfMenu7IsShown() 
    {
        var isShown = await blazorContextMenuService.IsMenuShown("menu7");
        IsMenu7Shown = isShown.ToString();
    }

    async Task FetchDataClick(ItemClickEventArgs e)
    {
        Console.WriteLine("Fetching");
        var summaries = await sampleDataService.GetSampleData();
        Summaries = string.Join(",", summaries);
        Console.WriteLine("Fetched: " + summaries);
        TextAreaDisplay = "block";
        StateHasChanged();
    }

    void ClearDataClick(ItemClickEventArgs e)
    {
        Summaries = "";
        TextAreaDisplay = "none";
        StateHasChanged();
    }

    void OnClick(ItemClickEventArgs e)
    {
        Console.WriteLine($"Item Clicked => Menu: {e.ContextMenuId}, MenuTarget: {e.ContextMenuTargetId}, IsCanceled: {e.IsCanceled}, MenuItem: {e.MenuItemElement}, MouseEvent: {e.MouseEvent}");
    }

    void OnAppearingMenu1(MenuAppearingEventArgs e)
    {
        if (e.ContextMenuTrigger != null && (e.ContextMenuTrigger.Id == "test9-trigger"))
        {
            e.PreventShow = true;
        }
        if (e.ContextMenuTargetId == "ignoreThis")
        {
            e.PreventShow = true;
        }
    }

    void OnHiding(MenuHidingEventArgs e)
    {
        e.PreventHide = true;
    }
}
